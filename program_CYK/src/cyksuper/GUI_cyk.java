/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cyksuper;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JOTAMA PC
 */
public class GUI_cyk extends javax.swing.JFrame {

    /**
     * Creates new form GUI_cyk
     */
    private final JFileChooser openfileChooser;
    String word;
    String Grammar;
    CYK cyk;
    JButton butt[][];
    JButton butt_step[];
    int get_ran;

    public GUI_cyk() {
        initComponents();
        this.setTitle("CYK Algorithm");
        openfileChooser = new JFileChooser();
        openfileChooser.setCurrentDirectory(new File("c:\\temp"));
        openfileChooser.setFileFilter(new FileNameExtensionFilter("Text Document", "txt"));
        convert_jTextArea.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        input_word = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        input_grammar = new javax.swing.JTextArea();
        jButton_ok = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Outpit_jPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Output = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        accept_label = new javax.swing.JLabel();
        openfile_jButton = new javax.swing.JButton();
        howtouse_jButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        convert_jTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        input_word.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_wordActionPerformed(evt);
            }
        });

        input_grammar.setColumns(20);
        input_grammar.setRows(5);
        jScrollPane1.setViewportView(input_grammar);

        jButton_ok.setText("Calculate");
        jButton_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_okActionPerformed(evt);
            }
        });

        jLabel1.setText("Grammar");

        jLabel2.setText("Word");

        Outpit_jPanel.setBackground(new java.awt.Color(204, 204, 255));
        Outpit_jPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));

        javax.swing.GroupLayout Outpit_jPanelLayout = new javax.swing.GroupLayout(Outpit_jPanel);
        Outpit_jPanel.setLayout(Outpit_jPanelLayout);
        Outpit_jPanelLayout.setHorizontalGroup(
            Outpit_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        Outpit_jPanelLayout.setVerticalGroup(
            Outpit_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(Outpit_jPanel);

        Output.setPreferredSize(new java.awt.Dimension(535, 700));

        javax.swing.GroupLayout OutputLayout = new javax.swing.GroupLayout(Output);
        Output.setLayout(OutputLayout);
        OutputLayout.setHorizontalGroup(
            OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 535, Short.MAX_VALUE)
        );
        OutputLayout.setVerticalGroup(
            OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        jScrollPane5.setViewportView(Output);

        jButton1.setText("Random");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Set Random");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        accept_label.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        accept_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        openfile_jButton.setText("Open File");
        openfile_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openfile_jButtonActionPerformed(evt);
            }
        });

        howtouse_jButton.setText("How to use");
        howtouse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howtouse_jButtonActionPerformed(evt);
            }
        });

        convert_jTextArea.setColumns(20);
        convert_jTextArea.setRows(5);
        jScrollPane2.setViewportView(convert_jTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jButton_ok)
                                .addGap(18, 18, 18)
                                .addComponent(openfile_jButton)
                                .addGap(18, 18, 18)
                                .addComponent(howtouse_jButton))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(input_word, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accept_label, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(input_word, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_ok)
                            .addComponent(openfile_jButton)
                            .addComponent(howtouse_jButton))
                        .addGap(18, 18, 18)
                        .addComponent(accept_label, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_okActionPerformed
        Outpit_jPanel.removeAll();

        word = input_word.getText();
        Grammar = input_grammar.getText();

        //07600482ใหม่
        ArrayList<String> ran_word = new ArrayList<String>();
        //07600482ใหม่  เก็บชุดข้อมูล Garmmar ตัวอักษรเล็กมาเช็คว่ามีข้อมูลในwordมาผิดไหม
        for (int j = 0; j < Grammar.length(); j++) { //เช็คเอาตัวอักษรตัวเล็กออกจากgarmmar
            if (Character.isLowerCase(Grammar.charAt(j))) {
                ran_word.add(String.valueOf(Grammar.charAt(j)));
            }
        }
        HashSet<String> hset = new HashSet<String>(ran_word); //ใช้HashSet เพื่อเก็บตัวอักขระที่ไม่ซ้ำกัน
        Iterator<String> it = hset.iterator();
        String sum = "";
        while (it.hasNext()) {
            String element = it.next();
            sum = sum + element;
        }
        //07600482ใหม่

        System.out.println(word);
        System.out.println(Grammar);
        cyk = new CYK(word, Grammar);
        cyk.Put_grammar();
        cyk.cal();
        cyk.print_data();

        //07600482
        int CHECKwordANDgrammer = 0;//เช็คว่าทั้งสองนั้นรับข้อมูลมาไหม
        int countcheckword = 0;  //เพิ่ม
        int countcheckgarmmar = 0;  //เพิ่ม
        int countcheckword2 = 0;  //07600482ใหม่
        //07600482

        Outpit_jPanel.setPreferredSize(new Dimension(80 * word.length(), (80 * word.length()) + 80)); /// เซ็ตขนาด Output

        String col[] = word.split("\\s*");

        //
        //*07600482  ถึง if (CHECKwordANDgrammer == 0) 
        String Checkword = input_word.getText();  //เพิ่ม
        String CheckGrammar = input_grammar.getText();  //เพิ่ม

        ///07600482ใหม่
        for (int D = 0; D < Checkword.length(); D++) {
            for (int i = 0; i < sum.length(); i++) {
                if (Checkword.charAt(D) == sum.charAt(i)) {
                    countcheckword2++;
                }
            }
        }
        //07600482ใหม่
        if (countcheckword2 != Checkword.length()) {
            JOptionPane.showMessageDialog(this, "กรุณาใส่ข้อมูลในระหว่าง" + sum, "แจ้งเตือน(word)", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }
        //07600482ใหม่

        //checkword  เพิ่ม
        for (int i = 0; i < Checkword.length(); i++) {
            if (Checkword.charAt(i) >= 'a' && Checkword.charAt(i) <= 'z') {
                countcheckword++;
            }
        }
        if (countcheckword != Checkword.length()) {
            JOptionPane.showMessageDialog(this, "กรุณาใส่ข้อมูลในระหว่าง a-z", "แจ้งเตือน(word)", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }

        //checkgammar เพิ่ม
        int checkBIGgrammar = 0;
        int checkSmallgrammar = 0;
        int checkL = 0;
        int checkK = 0;
        for (int i = 0; i < CheckGrammar.length(); i++) {
            if (CheckGrammar.charAt(i) >= 'A' && CheckGrammar.charAt(i) <= 'Z') {
                countcheckgarmmar++;
                checkBIGgrammar++;
            }
            if (CheckGrammar.charAt(i) >= 'a' && CheckGrammar.charAt(i) <= 'z') {
                countcheckgarmmar++;
                checkSmallgrammar++;
            }
            if (CheckGrammar.charAt(i) == '-') {
                countcheckgarmmar++;
                checkL++;
            }
            if (CheckGrammar.charAt(i) == '>') {
                countcheckgarmmar++;
                checkK++;
            }
            if (CheckGrammar.charAt(i) == ' ') {
                countcheckgarmmar++;
            }
            if (CheckGrammar.charAt(i) == '|') {
                countcheckgarmmar++;
            }
            if (CheckGrammar.charAt(i) == '\n') {
                // this is a new line (Enter)
                countcheckgarmmar++;
            }
        }

        if (countcheckgarmmar != CheckGrammar.length()) {
            JOptionPane.showMessageDialog(this, "กรุณาใส่ข้อมูลในระหว่าง A-Z,->,a-z", "แจ้งเตือน(Grammar)", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }

        if (word.equals("") && Grammar.equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณาป้อนwordและGrammar", "แจ้งเตือน", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }
        //ที่เพิ่ม ป้อนข้อมูลทั้งสองหรือไม่
        if (word.equals("") && !Grammar.equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณาป้อนword", "แจ้งเตือน(Word)", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }
        if (Grammar.equals("") && !word.equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณาป้อนGrammar", "แจ้งเตือน(Grammar)", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }
        //เช็คว่าใส่ตัวใหญ่แล้วหรือยัง
        if (checkBIGgrammar == 0 && !Grammar.equals("")) {//
            JOptionPane.showMessageDialog(this, "กรุณาใส่ข้อมูลในGrammarให้ครบถ้วน A-Z", "แจ้งเตือน(Grammar)", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }
        //เช็คว่าใส่ตัวเล็กแล้วหรือยัง
        if (checkSmallgrammar == 0 && !Grammar.equals("")) {//
            JOptionPane.showMessageDialog(this, "กรุณาใส่ข้อมูลในGrammarให้ครบถ้วน a-z", "แจ้งเตือน(Grammar)", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }
        //เช็คว่าใส่ตัว ->แล้วหรือยัง
        if (CheckGrammar.indexOf("->") == -1 && !Grammar.equals("")) {//
            JOptionPane.showMessageDialog(this, "กรุณาใส่ข้อมูลในGarmmarให้ครบถ้วน ->", "แจ้งเตือน(Grammar)", JOptionPane.ERROR_MESSAGE);
            CHECKwordANDgrammer++;
        }

        if (CHECKwordANDgrammer == 0) { //07600482 เพิ่มเช็คว่ามีwordกับ grammarอยู่ไหม
            int x = 0;
            int y = 80;
            int count = 1;
            butt = new JButton[word.length() + 1][word.length() + 1];

            for (int i = 0; i < word.length(); i++) {
                JButton butt_word = new JButton();
                butt_word.setBounds(x, 0, 80, 80);
                butt_word.setText(col[i]);
                butt_word.setBackground(Color.GREEN);
                Outpit_jPanel.add(butt_word);
                x += 80;
            }
            x = 0;
            for (int i = 1; i <= word.length(); i++) {
                for (int j = 1; j <= word.length() + 1 - i; j++) {
                    butt[i][j] = new JButton();
                    butt[i][j].setBounds(x, y, 80, 80);
                    butt[i][j].setBackground(Color.white);
                    String str1 = cyk.data[i][j];
                    String str_step = cyk.data_Step[i][j];
                    butt[i][j].setText(str1);
                    String str_step_Arr[] = cyk.data_Step[i][j].split("-");
                    String str_position_Arr[] = cyk.data_position[i][j].split("#");
                    int ii = i;
                    int jj = j;
                    if (i == 1) {
                        butt[i][j].addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent ae) {
                                Output.setPreferredSize(new Dimension(300, 150 * str_step_Arr.length)); /// เซ็ตขนาด Output        
                                Output.removeAll();
                                Output.repaint();
                                for (int l = 1; l <= word.length(); l++) {
                                    for (int m = 1; m <= word.length() + 1 - l; m++) {
                                        butt[l][m].setBackground(Color.white);
                                    }
                                }
                                butt[ii][jj].setBackground(Color.red);

                                butt_step = new JButton[str_step_Arr.length];
                                System.out.println(str_step_Arr.length);
                                for (int k = 0; k < str_step_Arr.length; k++) {
                                    butt_step[k] = new JButton();
                                    butt_step[k].setBounds(0, k * 150, 300, 150);
                                    butt_step[k].setText(str_step_Arr[k]);
                                    String str2 = str_position_Arr[k];
                                    butt_step[k].addActionListener(new ActionListener() {
                                        @Override
                                        public void actionPerformed(ActionEvent ae) {

                                        }
                                    });
                                    Output.add(butt_step[k]);
                                    Output.repaint();
                                }
                                Output.repaint();

                            }
                        });
                    } else {
                        butt[i][j].addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent ae) {
                                Output.setPreferredSize(new Dimension(300, 150 * str_step_Arr.length)); /// เซ็ตขนาด Output        
                                Output.removeAll();
                                Output.repaint();
                                for (int l = 1; l <= word.length(); l++) {
                                    for (int m = 1; m <= word.length() + 1 - l; m++) {
                                        butt[l][m].setBackground(Color.white);
                                    }
                                }
                                butt[ii][jj].setBackground(Color.red);///////////
                                butt_step = new JButton[str_step_Arr.length];
                                System.out.println(str_step_Arr.length);
                                for (int k = 0; k < str_step_Arr.length; k++) {
                                    butt_step[k] = new JButton();
                                    butt_step[k].setBounds(0, k * 150, 300, 150);
                                    butt_step[k].setText(str_step_Arr[k]);
                                    String str2 = str_position_Arr[k];
                                    butt_step[k].addActionListener(new ActionListener() {
                                        @Override
                                        public void actionPerformed(ActionEvent ae) {

                                            for (int l = 1; l <= word.length(); l++) {
                                                for (int m = 1; m <= word.length() + 1 - l; m++) {
                                                    butt[l][m].setBackground(Color.white);
                                                }
                                            }
                                            butt[ii][jj].setBackground(Color.red);
                                            String str3[] = str2.split(",");
                                            butt[Integer.parseInt(str3[0])][Integer.parseInt(str3[1])].setBackground(Color.yellow);
                                            butt[Integer.parseInt(str3[2])][Integer.parseInt(str3[3])].setBackground(Color.yellow);

                                        }
                                    });
                                    Output.add(butt_step[k]);
                                    Output.repaint();
                                }
                                Output.repaint();

                            }
                        });
                    }

                    Outpit_jPanel.add(butt[i][j]);
                    x += 80;
                }
                x = 0;
                y += 80;
            }
            accept_label.setText(cyk.check_accept());
            if (cyk.checkpoint_accept == 1) {
                convert_jTextArea.setVisible(true);
                convert_jTextArea.setFont(new Font("Serif", Font.BOLD, 15));
                convert_jTextArea.setText(cyk.print_data_convert());
                cyk.checkpoint_accept = 0;
            }else{              
                convert_jTextArea.setFont(new Font("Serif", Font.BOLD, 15));
                convert_jTextArea.setText("");
                convert_jTextArea.setVisible(false);
            }
            Output.repaint();
            Outpit_jPanel.repaint();
        }

    }//GEN-LAST:event_jButton_okActionPerformed

    private void input_wordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_wordActionPerformed

    }//GEN-LAST:event_input_wordActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //07600482
        int check = 0;
        if (get_ran == 0) {
            JOptionPane.showMessageDialog(this, "กรุณาระบุขนาดในการสุ่มwordก่อน", "แจ้งเตือน(สุ่มword)", JOptionPane.ERROR_MESSAGE);
            check++;
        }
        if (get_ran < 0) {
            JOptionPane.showMessageDialog(this, "กรุณาระบุขนาดในการสุ่มwordก่อนให้ถูกต้อง (ต้องมากกว่า0)", "แจ้งเตือน(สุ่มword)", JOptionPane.ERROR_MESSAGE);
            check++;
        }
        if (input_grammar.getText().equals("") && get_ran > 0) {
            JOptionPane.showMessageDialog(this, "กรุณาระบุข้อมูลในGrammarก่อนถึงจะสามารถสุ่มwordได้", "แจ้งเตือน(สุ่มword)", JOptionPane.ERROR_MESSAGE);
            check++;
        }
        //07600482
        Grammar = input_grammar.getText();
        cyk = new CYK();
        if (check == 0) {//07600482ใหม่  เพิ่มifกับcheckกัน errorใส่ข้อมูลว่างไป
            String ran = cyk.Ran_word(get_ran, Grammar);
            input_word.setText(ran);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFrame newFrame = new JFrame("Set Random");
        JButton butt_set_ran = new JButton("Set");
        butt_set_ran.setBounds(120, 10, 95, 30);
        newFrame.add(butt_set_ran);
        JTextField tf = new JTextField();
        tf.setBounds(10, 10, 100, 30);
        newFrame.add(tf);
        newFrame.setSize(250, 100);
        newFrame.setLayout(null);
        newFrame.setVisible(true);
        butt_set_ran.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {

                get_ran = Integer.parseInt(tf.getText());
                newFrame.setVisible(false);

            }
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void openfile_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openfile_jButtonActionPerformed
        int returnValue = openfileChooser.showOpenDialog(this);
        String openfile = "";
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File file = openfileChooser.getSelectedFile();
            try {
                BufferedReader br = new BufferedReader(new FileReader(file));
                String line;
                while ((line = br.readLine()) != null) {
                    openfile += line + "\n";
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI_cyk.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI_cyk.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        input_grammar.setText(openfile);
    }//GEN-LAST:event_openfile_jButtonActionPerformed

    private void howtouse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howtouse_jButtonActionPerformed
        // 07590469 และ 07590494
        JFrame newFrame = new JFrame("How to use");
        JLabel howto = new JLabel("How to use");
        JLabel one = new JLabel("1. ข้อมูลในword ใส่ข้อมูลระหว่าง a-z");
        JLabel two = new JLabel("2.Grammar ใส่ข้อมูล A-Z,สัญลักษณ์->,a-z \n");
        JLabel three = new JLabel("3.ปุ่ม Random สารมารถ Random word ได้แต่ต้องใส่ค่า Set Random กับ Grammar ก่อน");
        JLabel four = new JLabel("4.ปุ่ม Set Random สุ่มRandomโดยรับค่าจำนวนเต็ม(int)มา");
        JLabel five = new JLabel("5.Calculate จะคำนวณข้อมูลที่ได้รับมาจาก Grammar และ Word");
        JLabel six = new JLabel("6.Open File สามารถเปิดไฟล์ Grammar ที่เก็บไว้เป็นไฟล์ Text มาเปิดได้");
        newFrame.setSize(900, 400);
        howto.setBounds(10, 0, 800, 50);
        howto.setFont(new Font("Serif", Font.BOLD, 28));
        newFrame.add(howto);
        one.setBounds(10, 50, 800, 50);
        one.setFont(new Font("Serif", Font.PLAIN, 18));
        newFrame.add(one);
        two.setBounds(10, 100, 800, 50);
        two.setFont(new Font("Serif", Font.PLAIN, 18));
        newFrame.add(two);
        three.setBounds(10, 150, 800, 50);
        three.setFont(new Font("Serif", Font.PLAIN, 18));
        newFrame.add(three);
        four.setBounds(10, 200, 800, 50);
        four.setFont(new Font("Serif", Font.PLAIN, 18));
        newFrame.add(four);
        five.setBounds(10, 250, 800, 50);
        five.setFont(new Font("Serif", Font.PLAIN, 18));
        newFrame.add(five);
        six.setBounds(10, 300, 800, 50);
        six.setFont(new Font("Serif", Font.PLAIN, 18));
        newFrame.add(six);
        newFrame.setLayout(null);
        newFrame.setVisible(true);
    }//GEN-LAST:event_howtouse_jButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_cyk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_cyk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_cyk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_cyk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_cyk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Outpit_jPanel;
    private javax.swing.JPanel Output;
    private javax.swing.JLabel accept_label;
    private javax.swing.JTextArea convert_jTextArea;
    private javax.swing.JButton howtouse_jButton;
    private javax.swing.JTextArea input_grammar;
    private javax.swing.JTextField input_word;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton openfile_jButton;
    // End of variables declaration//GEN-END:variables
}
